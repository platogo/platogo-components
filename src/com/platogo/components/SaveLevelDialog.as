/*  Copyright (c) 2009 Platogo Interactive Entertainment GmbH  Permission is hereby granted, free of charge, to any person obtaining a copy  of this software and associated documentation files (the "Software"), to deal  in the Software without restriction, including without limitation the rights  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell  copies of the Software, and to permit persons to whom the Software is  furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in  all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN  THE SOFTWARE.*/package com.platogo.components {	import com.platogo.api.PlatogoAPI;	import com.platogo.api.enums.LevelStatus;	import com.platogo.api.enums.PlatogoStatus;	import com.platogo.api.vo.Level;	import com.platogo.api.vo.PlatogoResponse;	import com.platogo.components.core.BaseComponent;	import com.platogo.components.core.DisplayDummy;	import com.platogo.components.utils.Library;		import flash.display.BitmapData;	import flash.display.MovieClip;	import flash.display.SimpleButton;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.geom.ColorTransform;	import flash.text.TextFieldType;		/**	 * @author sirflo	 */	public class SaveLevelDialog extends BaseComponent	{	// ============================================================================================				public var skin : MovieClip;				private static var NAME_MIN_CHARACTERS : uint = 3;		private static var NAME_MAX_CHARACTERS : uint = 32;		private static var DESCRIPTION_MAX_CHARACTERS : uint = 256;	// ============================================================================================		private var _levelToUpdate : Level;		private var _levelData : Object;		private var _levelImage : BitmapData;		private var _levelCategories : Array;				private var _warningMessage : MovieClip;	// ============================================================================================		public function SaveLevelDialog()		{			DisplayDummy.substituteMissingChildren( skin, [ "loadingIndicator", "levelName", "levelDescription",				"charactersLeft", "errorMessage", "save", "close" ] );		}			// ============================================================================================				override protected function initialize() : void		{			// set defaults			if ( !PlatogoAPI.currentUser.loggedIn )			{				_warningMessage = Library.getAsset( "com.platogo.components.assets.SaveLevelDialog_warningMessage" );				_warningMessage.x = 16; _warningMessage.y = 44;				skin.addChild( _warningMessage );								disableAllInput();				enableButton( skin.cancel );			}			else			{				enableAllInput();				disableButton( skin.save );			}						skin.loadingIndicator.visible = false;						skin.levelName.maxChars = SaveLevelDialog.NAME_MAX_CHARACTERS;			skin.levelDescription.maxChars = SaveLevelDialog.DESCRIPTION_MAX_CHARACTERS;			skin.levelDescription.text = skin.errorMessage.text = "";						stage.focus = skin.levelName;						// add listeners			skin.levelName.addEventListener( Event.CHANGE, textChangeListener, false, 0, true );			skin.levelDescription.addEventListener( Event.CHANGE, textChangeListener, false, 0, true );						skin.save.addEventListener( MouseEvent.CLICK, saveClickListener, false, 0, true );			skin.cancel.addEventListener( MouseEvent.CLICK, cancelClickListener, false, 0, true );		}		override protected function cleanup() : void		{			if ( _warningMessage )			{				skin.removeChild( _warningMessage );				_warningMessage = null;			}						// remove listeners			skin.levelName.removeEventListener( Event.CHANGE, textChangeListener );			skin.levelDescription.removeEventListener( Event.CHANGE, textChangeListener );						skin.save.removeEventListener( MouseEvent.CLICK, saveClickListener );			skin.cancel.removeEventListener( MouseEvent.CLICK, cancelClickListener );		}			// ============================================================================================		protected function enableButton( button : SimpleButton ) : void		{			button.tabEnabled = button.mouseEnabled = true;			button.transform.colorTransform = new ColorTransform();		}		protected function disableButton( button : SimpleButton ) : void		{			button.tabEnabled = button.mouseEnabled = false;			button.transform.colorTransform = new ColorTransform( 0.6, 0.6, 0.6, 1, 128, 128, 128 );		}				protected function enableAllInput() : void		{			enableButton( skin.save );			enableButton( skin.cancel );						skin.levelName.tabEnabled = skin.levelDescription.tabEnabled = true;			skin.levelName.type = skin.levelDescription.type = TextFieldType.INPUT;		}		protected function disableAllInput() : void		{			disableButton( skin.save );			disableButton( skin.cancel );						skin.levelName.tabEnabled = skin.levelDescription.tabEnabled = false;			skin.levelName.type = skin.levelDescription.type = TextFieldType.DYNAMIC;		}		protected function saveLevel() : void		{			if ( !skin.save.mouseEnabled )			{				return;			}			skin.loadingIndicator.visible = true;			disableAllInput();						if ( _levelToUpdate != null )			{				PlatogoAPI.levelService.updateLevel( _levelToUpdate, skin.levelName.text, _levelData, LevelStatus.PUBLIC, skin.levelDescription.text, _levelImage, _levelCategories, createOrUpdateLevelHandler );			}			else			{				PlatogoAPI.levelService.createLevel( skin.levelName.text, _levelData, LevelStatus.PUBLIC, skin.levelDescription.text, _levelImage, _levelCategories, createOrUpdateLevelHandler );			}		}				protected function createOrUpdateLevelHandler( response : PlatogoResponse ) : void		{			skin.loadingIndicator.visible = false;						enableAllInput();						if ( response.status == PlatogoStatus.OK )			{				dispatchEvent( new Event( Event.COMPLETE ) );				skin.errorMessage.text = "";			}			else			{				skin.errorMessage.text = response.message;			}		}			// ============================================================================================			protected function textChangeListener( event : Event ) : void		{			if ( ( skin.levelName.text.length >= SaveLevelDialog.NAME_MIN_CHARACTERS ) && PlatogoAPI.currentUser.loggedIn )			{				enableButton( skin.save );			}			else			{				disableButton( skin.save );			}						skin.charactersLeft.text = ( skin.levelDescription.maxChars - skin.levelDescription.text.length ).toString();		}		protected function saveClickListener( event : MouseEvent ) : void		{			saveLevel();		}		protected function cancelClickListener( event : MouseEvent ) : void		{			dispatchEvent( new Event( Event.CANCEL ) );		}			// ============================================================================================			public function get levelToUpdate() : Level		{			return _levelToUpdate;		}		public function set levelToUpdate( value : Level ) : void		{			_levelToUpdate = value;		}				public function get levelData() : Object		{			return _levelData;		}		public function set levelData( value : Object ) : void		{			_levelData = value;		}		public function get levelImage() : BitmapData		{			return _levelImage;		}		public function set levelImage( value : BitmapData ) : void		{			_levelImage = value;		}		[ Inspectable( name="Level Categories" ) ]		public function get levelCategories() : Array		{			return _levelCategories;		}		public function set levelCategories( value : Array ) : void		{			_levelCategories = value;		}	}}