package com.platogo.components.ui {	import flash.display.MovieClip;	import flash.display.SimpleButton;	import flash.display.Sprite;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.text.TextField;			/**	 * @author sirflo	 */	public class DropDown extends Sprite 	{	// ============================================================================================				public var textField : TextField;		public var clickArea : SimpleButton;		public var background : MovieClip;		private var _itemsParent : Sprite;		private var _selectedItem : DropDownItem;	// ============================================================================================		public function DropDown()		{			_itemsParent = new Sprite();			_itemsParent.x = background.x;			_itemsParent.y = background.y;			addChild( _itemsParent );						hideDropDown();			textField.mouseEnabled = false;						clickArea.addEventListener( MouseEvent.CLICK, dropDownClickListener, false, 0, true );			addEventListener( Event.ADDED_TO_STAGE, addedToStageListener, false, 0, true );		}				public function dispose() : void		{			if ( stage != null )			{				stage.removeEventListener( MouseEvent.MOUSE_DOWN, mouseDownOutsideListener );			}						clickArea.removeEventListener( MouseEvent.CLICK, dropDownClickListener );						hideDropDown();						removeChild( _itemsParent );			_itemsParent = null;		}			// ============================================================================================				private function showDropDown() : void		{			background.visible = _itemsParent.visible = true;		}		private function hideDropDown() : void		{			background.visible = _itemsParent.visible = false;		}				private function clearItems() : void		{			var item : DropDownItem;			while ( _itemsParent.numChildren )			{				item = _itemsParent.removeChildAt( 0 ) as DropDownItem;				item.removeEventListener( MouseEvent.CLICK, itemClickListener );			}		}			// ============================================================================================				public function addedToStageListener( event : Event ) : void		{			removeEventListener( Event.ADDED_TO_STAGE, addedToStageListener );			stage.addEventListener( MouseEvent.MOUSE_DOWN, mouseDownOutsideListener, false, 0, true );		}		public function itemClickListener( event : MouseEvent ) : void		{			var item : DropDownItem = event.target as DropDownItem;						if ( item != _selectedItem )			{				_selectedItem = event.target as DropDownItem;				textField.text = _selectedItem.label;								dispatchEvent( new Event( Event.CHANGE ) );			}						hideDropDown();		}		public function dropDownClickListener( event : MouseEvent ) : void		{			if ( background.visible ) hideDropDown(); else showDropDown();		}				public function mouseDownOutsideListener( event : MouseEvent ) : void		{			if ( ( event.target != clickArea ) && !( event.target is DropDownItem ) )			{				hideDropDown();			}		}			// ============================================================================================		public function set dataProvider( value : Array ) : void		{			clearItems();			_selectedItem = null;						if ( value != null )			{				var obj : Object;				var item : DropDownItem;				var backgroundHeight : Number = 0;								for ( var i:int=0; i<value.length; ++i )				{					obj = value[ i ];										if ( ( obj.label != null ) && ( obj.data != null ) )					{						item = new DropDownItem( obj.label, obj.data );						item.addEventListener( MouseEvent.CLICK, itemClickListener, false, 0, true );						item.y = backgroundHeight;						_itemsParent.addChild( item );												backgroundHeight += item.height;											}										background.height = backgroundHeight;				}								if ( _itemsParent.numChildren )				{					_selectedItem = _itemsParent.getChildAt( 0 ) as DropDownItem;					textField.text = _selectedItem.label;				}			}		}			// ============================================================================================			public function get selectedItem() : DropDownItem		{			return _selectedItem;		}	}}