/*  Copyright (c) 2009 Platogo Interactive Entertainment GmbH  Permission is hereby granted, free of charge, to any person obtaining a copy  of this software and associated documentation files (the "Software"), to deal  in the Software without restriction, including without limitation the rights  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell  copies of the Software, and to permit persons to whom the Software is  furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in  all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN  THE SOFTWARE.*/package com.platogo.components.entries {	import com.platogo.api.PlatogoAPI;		import com.platogo.api.vo.Score;	import com.platogo.components.core.IDisposable;	import com.platogo.components.images.UserImage;	import com.platogo.components.utils.TextFormatter;	import com.platogo.components.utils.sprintf;		import flash.display.Sprite;	import flash.text.TextField;	import flash.utils.Dictionary;			/**	 * @author sirflo	 */	public class ScoreEntry extends Sprite implements IDisposable	{	// ============================================================================================				public var userImage : UserImage;		public var userName : TextField;		public var scorePosition : TextField;		public var scoreDate : TextField;		public var scoreValue : TextField;		public var currentUserEntry : Sprite;	// ============================================================================================				private var _score : Score;		private var _dynamicText : Dictionary;
		private var _timeBased : Boolean;
		// ============================================================================================			public function ScoreEntry() : void		{			_dynamicText = new Dictionary( true );			_dynamicText[ scoreDate ] = scoreDate.text;						currentUserEntry.visible = false;		}				public function dispose() : void		{			userImage.dispose();			userImage = null;						_dynamicText = null;		}			// ============================================================================================			public function get score() : Score		{			return _score;		}		public function set score( value : Score ) : void		{			_score = value;						if ( _score != null )			{				userImage.user = _score.user;				userName.text = _score.user.name;				scoreDate.text = sprintf( _dynamicText[ scoreDate ], TextFormatter.formatDate( _score.date ) );				scoreValue.text = ( _timeBased ) ? TextFormatter.formatTime( _score.value ) : TextFormatter.formatNumber( _score.value );;				currentUserEntry.visible = ( PlatogoAPI.currentUser.name == _score.user.name );			}		}		public function get position() : uint		{			return parseInt( scorePosition.text.slice( 0, -1 ) );		}		public function set position( value : uint ) : void		{			scorePosition.text = ( value > 0 ) ? TextFormatter.formatNumber( value ) +"." : "";		}		public function get timeBased() : Boolean		{			return _timeBased;		}		public function set timeBased( value : Boolean ) : void		{			_timeBased = value;			score = score; // redisplay score		}	}}